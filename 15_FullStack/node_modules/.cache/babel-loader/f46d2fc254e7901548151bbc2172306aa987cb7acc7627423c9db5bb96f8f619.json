{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronir\\\\IdeaProjects\\\\15_FullStack\\\\Exam_03.06.2024\\\\frontendreact\\\\src\\\\Components\\\\Pages\\\\AllTasks2\\\\AllTasks2.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./AllTasks2.css\";\nimport Table from \"../../Table/Table\";\nimport axios from \"axios\";\nimport { SingleTask2 } from \"../SingleTask2/SingleTask2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AllTasks2() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/Tasks/GetAllTasks\").then(res => {\n      //console.log(res.data);           \n      let returnTask = [];\n      for (let index = 0; index < res.data.length; index++) {\n        returnTask.push(res.data[index]);\n      }\n      setTasks(returnTask);\n    });\n  }, []);\n  const data1 = [{\n    name: 'Cy Ganderton',\n    job: 'Quality Control Specialist',\n    location: 'Canada'\n  }, {\n    name: 'Hart Hagerty',\n    job: 'Desktop Support Technician',\n    location: 'United States'\n  }, {\n    name: 'Brice Swyre',\n    job: 'Tax Accountant',\n    location: 'China'\n  }];\n  const columns1 = [{\n    key: 'name',\n    title: 'Name'\n  }, {\n    key: 'job',\n    title: 'Job'\n  }, {\n    key: 'location',\n    title: 'Color',\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-blue-500 font-bold\",\n        children: record.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    }\n  }];\n  const columns = [{\n    key: 'id',\n    title: 'ID'\n  }, {\n    key: 'name',\n    title: 'Name'\n  }, {\n    key: 'responsible',\n    title: 'Responsible'\n  }, {\n    key: 'scheduledDate',\n    title: 'Scheduled For'\n  }, {\n    key: 'isCompleted',\n    title: 'Completed?'\n  }];\n  const data = [{\n    name: 'Cy Ganderton',\n    job: 'Quality Control Specialist',\n    location: 'Canada'\n  }, {\n    name: 'Hart Hagerty',\n    job: 'Desktop Support Technician',\n    location: 'United States'\n  }, {\n    name: 'Brice Swyre',\n    job: 'Tax Accountant',\n    location: 'China'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AllTasks2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        data: data1,\n        columns: columns1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks.map(item => /*#__PURE__*/_jsxDEV(SingleTask2, {\n        id: item.id,\n        name: item.name,\n        responsible: item.responsible,\n        scheduledDate: item.scheduledDate,\n        isCompleted: item.isCompleted\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(AllTasks2, \"Qtrz6vakdAi0z9WiU2BC9GkpZpA=\");\n_c = AllTasks2;\nvar _c;\n$RefreshReg$(_c, \"AllTasks2\");","map":{"version":3,"names":["useState","useEffect","Table","axios","SingleTask2","jsxDEV","_jsxDEV","AllTasks2","_s","tasks","setTasks","get","then","res","returnTask","index","data","length","push","data1","name","job","location","columns1","key","title","render","_","record","className","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","map","item","id","responsible","scheduledDate","isCompleted","_c","$RefreshReg$"],"sources":["C:/Users/ronir/IdeaProjects/15_FullStack/Exam_03.06.2024/frontendreact/src/Components/Pages/AllTasks2/AllTasks2.tsx"],"sourcesContent":["import { ReactElement, JSXElementConstructor, ReactNode, ReactPortal, useState, useEffect } from \"react\";\nimport \"./AllTasks2.css\";\nimport { ColumnProps } from \"../../Models/ColumnProps\";\nimport Table  from \"../../Table/Table\";\nimport { Task } from \"../../Models/Task\";\nimport axios from \"axios\";\nimport { SingleTask } from \"../SingleTask/SingleTask\";\nimport { SingleTask2 } from \"../SingleTask2/SingleTask2\";\n\ntype Data = {\n    name: string;\n    job: string;\n    location: string;\n  };\n\nexport function AllTasks2(): JSX.Element {\n    const [tasks,setTasks] = useState<Task[]>([]);\n\n    useEffect(()=>{\n        axios.get(\"http://localhost:8080/Tasks/GetAllTasks\").then(res=>{\n            //console.log(res.data);           \n            let returnTask = [];\n            for (let index=0;index<res.data.length;index++){\n                returnTask.push(res.data[index]);\n            }\n            setTasks(returnTask);\n        })\n    },[])\n\n    const data1 = [\n        {\n          name: 'Cy Ganderton',\n          job: 'Quality Control Specialist',\n          location: 'Canada',\n        },\n        {\n          name: 'Hart Hagerty',\n          job: 'Desktop Support Technician',\n          location: 'United States',\n        },\n        {\n          name: 'Brice Swyre',\n          job: 'Tax Accountant',\n          location: 'China',\n        },\n      ];\n      const columns1: Array<ColumnProps<Data>> = [\n        {\n          key: 'name',\n          title: 'Name',\n        },\n        {\n          key: 'job',\n          title: 'Job',\n        },\n        {\n          key: 'location',\n          title: 'Color',\n    \n          render: (_: any, record: { location: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | null | undefined; }) => {\n            return <div className=\"text-blue-500 font-bold\">{record.location}</div>;\n          },\n        },\n      ];\n\n      const columns: Array<ColumnProps<Task>> = [\n        {\n          key: 'id',\n          title: 'ID',\n        },\n        {\n          key: 'name',\n          title: 'Name',\n        },\n        {\n          key: 'responsible',\n          title: 'Responsible',\n        },\n        {\n            key: 'scheduledDate',\n            title: 'Scheduled For',\n        },\n        {\n            key: 'isCompleted',\n            title: 'Completed?',\n        },\n      ];\n      \n      const data = [\n        {\n          name: 'Cy Ganderton',\n          job: 'Quality Control Specialist',\n          location: 'Canada',\n        },\n        {\n          name: 'Hart Hagerty',\n          job: 'Desktop Support Technician',\n          location: 'United States',\n        },\n        {\n          name: 'Brice Swyre',\n          job: 'Tax Accountant',\n          location: 'China',\n        },\n      ];\n\n    return (\n        <div className=\"AllTasks2\">\n\t\t\t<div>\n                <Table data={data1} columns={columns1} />\n            </div>\n            <div>\n            {tasks.map(item=><SingleTask2 key={item.id} id={item.id} name={item.name} responsible=\n            {item.responsible} scheduledDate={item.scheduledDate} isCompleted={item.isCompleted}/>)}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}